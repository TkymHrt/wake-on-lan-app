name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: './frontend/pnpm-lock.yaml'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      working-directory: ./frontend

    - name: Run Biome checks
      run: pnpm exec biome ci ./
      working-directory: ./frontend

    - name: Type check
      run: pnpm exec tsc --noEmit
      working-directory: ./frontend

    - name: Build frontend
      run: pnpm run build
      working-directory: ./frontend

    - name: Test build artifacts
      run: |
        ls -la dist/
      working-directory: ./frontend

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: frontend/node_modules/
        key: ${{ runner.os }}-pnpm-${{ hashFiles('frontend/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

  security-scan:
    runs-on: ubuntu-latest
    needs: test-and-build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        cache-dependency-path: './frontend/pnpm-lock.yaml'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: frontend/node_modules/
        key: ${{ runner.os }}-pnpm-${{ hashFiles('frontend/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      working-directory: ./frontend

    - name: Run security audit
      run: pnpm audit --audit-level moderate
      working-directory: ./frontend
      continue-on-error: true

    - name: Check for known vulnerabilities
      run: pnpm audit --audit-level high
      working-directory: ./frontend